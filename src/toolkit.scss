// ======================================================
// General use variables
// ======================================================

$responsiveBreakpoints: (
  'xs': '0px',
  'sm': '576px',
  'md': '768px',
  'lg': '992px',
  'xl': '1200px',
  'xxl': '1400px'
);

$normalSizes: (
  '3xl': 65px,
  'xxl': 45px,
  'xl': 35px,
  'lg': 25px,
  'md': 15px,
  'sm': 10px,
  'xs': 7px,
  'xxs': 5px,
  'none': 0
);

$directions: (
  't': '-top',
  'r': '-right',
  'b': '-bottom',
  'l': '-left',
  'a': ''
);

$biDirections: (
  'x': (
    '-left',
    '-right'
  ),
  'y': (
    '-top',
    '-bottom'
  )
);

// ======================================================
// Row columns setup
// ======================================================
$max-col: 12;

// ========
// Create default column responsiveBreakpoints
// ========
@for $i from 1 through $max-col {
  .col-#{$i} {
    grid-column: span $i;
  }
}

// ========
// Create default breakpoint column responsiveBreakpoints
// ========
@each $sizeName, $breakpoint in $responsiveBreakpoints {
  @for $i from 1 through $max-col {
    .col-#{$sizeName}-#{$i} {
      grid-column: span $i;
    }
  }
}

// ========
// Create breakpoint column responsiveBreakpoints for responsive
// ========
@each $breakpointName, $breakpoint in $responsiveBreakpoints {
  @media (min-width: $breakpoint) {
    @for $i from 1 through $max-col {
      .col-#{$breakpointName}-#{$i} {
        grid-column: span $i;
      }
    }
  }
}

.row {
  display: grid;
  grid-template-columns: repeat($max-col, minmax(0, 1fr));
  grid-column-gap: MIN(calc(100% / ($max-col - 1)), var(--size-md));
  grid-row-gap: var(--size-md);
}

// ======================================================
// Size normalization for padding/margin etc...
// ======================================================

@each $sizeName, $sizeVal in $normalSizes {
  :root {
    --size-#{$sizeName}: #{$sizeVal};
  }
  .gap-#{$sizeName} {
    gap: #{$sizeVal};
  }

  .row-gap-#{$sizeName} {
    row-gap: #{$sizeVal};
  }

  .col-gap-#{$sizeName} {
    column-gap: #{$sizeVal};
  }

  @each $directionLabel, $directionValue in $directions {
    .m#{$directionLabel}-#{$sizeName} {
      margin#{$directionValue}: #{$sizeVal};
    }
    .p#{$directionLabel}-#{$sizeName} {
      padding#{$directionValue}: #{$sizeVal};
    }
  }
  @each $directionLabel, $directionValues in $biDirections {
    .m#{$directionLabel}-#{$sizeName} {
      @each $directionValue in $directionValues {
        margin#{$directionValue}: #{$sizeVal};
      }
    }
    .p#{$directionLabel}-#{$sizeName} {
      @each $directionValue in $directionValues {
        padding#{$directionValue}: #{$sizeVal};
      }
    }
  }
}

@each $breakpointName, $breakpoint in $responsiveBreakpoints {
  @media (min-width: $breakpoint) {
    @each $sizeName, $sizeVal in $normalSizes {
      :root {
        --size-#{$sizeName}: #{$sizeVal};
      }

      .gap-#{$breakpointName}-#{$sizeName} {
        gap: #{$sizeVal};
      }

      .row-gap-#{$breakpointName}-#{$sizeName} {
        row-gap: #{$sizeVal};
      }

      .col-gap-#{$breakpointName}-#{$sizeName} {
        column-gap: #{$sizeVal};
      }
      @each $directionLabel, $directionValue in $directions {
        .m#{$directionLabel}-#{$breakpointName}-#{$sizeName} {
          margin#{$directionValue}: #{$sizeVal};
        }
        .p#{$directionLabel}-#{$breakpointName}-#{$sizeName} {
          padding#{$directionValue}: #{$sizeVal};
        }
      }
    }
  }
}

// ======================================================
// Typography
// ======================================================

.line-normal {
  line-height: 1.1;
}

.text-dense {
  line-height: 1;
}

.text-italic {
  font-style: italic;
}

.text-underscore {
  text-decoration: underline;
}

.text-bold {
  font-weight: bold;
}

.text-semibold {
  font-weight: 500;
}

.text-thin {
  font-weight: 100;
}

// ========
// Font sizes
// ========

$textSizes: (
  'reset': '1rem',
  'xs': '.7em',
  'sm': '.85em',
  'md': '1em',
  'lg': '1.1em',
  'xl': '1.3em',
  'xxl': '1.6em',
  '3xl': '1.8em',
  '4xl': '2em'
);

// ========
// Create breakpoint column responsiveBreakpoints for responsive
// ========
@each $breakpointName, $breakpoint in $responsiveBreakpoints {
  @each $sizeName, $sizeValue in $textSizes {
    .text-#{$breakpointName}-#{$sizeName} {
      font-size: #{$sizeValue};
    }
  }
}

// ========
// Create default breakpoint column responsiveBreakpoints
// ========
@each $sizeName, $sizeValue in $textSizes {
  .text-#{$sizeName} {
    font-size: #{$sizeValue};
  }
}

// ========
// Create breakpoint column responsiveBreakpoints for responsive
// ========
@each $breakpointName, $breakpoint in $responsiveBreakpoints {
  @media (min-width: $breakpoint) {
    @each $sizeName, $sizeValue in $textSizes {
      .text-#{$breakpointName}-#{$sizeName} {
        font-size: #{$sizeValue};
      }
    }
  }
}

// ======================================================
// Utility classes
// ======================================================

@each $directionLabel, $directionValue in $directions {
  .border-#{$directionLabel} {
    border#{$directionValue}-style: solid;
    border#{$directionValue}-width: 1px;
  }
}

// ======================================================
// To organize
// ======================================================

.position-relative {
  position: relative;
}

.min-full-vh {
  min-height: 100vh;
}

.full-vh {
  height: 100vh;
}

.full-height {
  height: 100%;
}
